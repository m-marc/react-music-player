[{"E:\\react-music-player\\src\\reportWebVitals.js":"1","E:\\react-music-player\\src\\App.js":"2","E:\\react-music-player\\src\\components\\Song.js":"3","E:\\react-music-player\\src\\index.js":"4","E:\\react-music-player\\src\\components\\Player.js":"5","E:\\react-music-player\\src\\data.js":"6","E:\\react-music-player\\src\\components\\LibrarySong.js":"7","E:\\react-music-player\\src\\components\\Library.js":"8","E:\\react-music-player\\src\\components\\Nav.js":"9"},{"size":362,"mtime":1606762730375,"results":"10","hashOfConfig":"11"},{"size":2249,"mtime":1606866177349,"results":"12","hashOfConfig":"11"},{"size":320,"mtime":1606765743538,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1606762730375,"results":"14","hashOfConfig":"11"},{"size":2938,"mtime":1606866642080,"results":"15","hashOfConfig":"11"},{"size":2151,"mtime":1606764904967,"results":"16","hashOfConfig":"11"},{"size":1237,"mtime":1606865361119,"results":"17","hashOfConfig":"11"},{"size":750,"mtime":1606859160043,"results":"18","hashOfConfig":"11"},{"size":441,"mtime":1606859030649,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x60yjz",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react-music-player\\src\\reportWebVitals.js",[],"E:\\react-music-player\\src\\App.js",[],"E:\\react-music-player\\src\\components\\Song.js",[],"E:\\react-music-player\\src\\index.js",[],"E:\\react-music-player\\src\\components\\Player.js",["39"],"import React, {useEffect} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlay, faPause, faAngleLeft, faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({currentSong, isPlaying, setIsPlaying, audioRef, setSongInfo, songInfo, songs, setSongs, setCurrentSong}) => {\r\n\r\n    useEffect(() => {\r\n        if (isPlaying) {\r\n            const playPromise = audioRef.current.play()\r\n            if (playPromise !== undefined) {\r\n                playPromise.then(audio => {\r\n                    audioRef.current.play()\r\n                })\r\n            }\r\n        }\r\n    }, [currentSong])\r\n\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause()\r\n            setIsPlaying(!isPlaying)\r\n        } else {\r\n            audioRef.current.play()\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n    }\r\n\r\n    const formatTime = (time) => Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value\r\n        setSongInfo({...songInfo, currentTime: e.target.value})\r\n    }\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n        const currentIndex = songs.findIndex(s => s.id === currentSong.id)\r\n        let newIndex = currentIndex + direction\r\n\r\n        if (newIndex >= songs.length) newIndex = 0\r\n        else if (newIndex < 0) newIndex = songs.length - 1\r\n\r\n        await setCurrentSong(songs[newIndex])\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{formatTime(songInfo.currentTime)}</p>\r\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\r\n                    <input\r\n                        min={0}\r\n                        max={songInfo.duration || 0}\r\n                        value={songInfo.currentTime}\r\n                        onChange={dragHandler}\r\n                        type=\"range\"/>\r\n                    <div className=\"animate-track\" style={{transform: `translateX(${(songInfo.currentTime/songInfo.duration)*100}%)`}}>\r\n\r\n                    </div>\r\n                </div>\r\n                <p>{formatTime(songInfo.duration || 0)}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler(-1)} className=\"skip-back\" size=\"2x\"\r\n                                 icon={faAngleLeft}/>\r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler}\r\n                    className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay}/>\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler(1)} className=\"skip-forward\" size=\"2x\"\r\n                                 icon={faAngleRight}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","E:\\react-music-player\\src\\data.js",[],"E:\\react-music-player\\src\\components\\LibrarySong.js",[],"E:\\react-music-player\\src\\components\\Library.js",[],"E:\\react-music-player\\src\\components\\Nav.js",[],{"ruleId":"40","severity":1,"message":"41","line":16,"column":8,"nodeType":"42","endLine":16,"endColumn":21,"suggestions":"43"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'audioRef' and 'isPlaying'. Either include them or remove the dependency array.","ArrayExpression",["44"],{"desc":"45","fix":"46"},"Update the dependencies array to be: [audioRef, currentSong, isPlaying]",{"range":"47","text":"48"},[628,641],"[audioRef, currentSong, isPlaying]"]