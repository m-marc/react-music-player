{"version":3,"sources":["components/Player.js","components/Song.js","data.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","useEffect","playPromise","current","play","undefined","then","audio","formatTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","s","id","newIndex","length","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","transform","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","chillHop","uuidv4","active","LibrarySong","song","songSelectHandler","newSongs","map","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useState","data","useRef","timeUpdateHandler","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.952f83e7.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlay, faPause, faAngleLeft, faAngleRight} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({currentSong, isPlaying, setIsPlaying, audioRef, setSongInfo, songInfo, songs, setSongs, setCurrentSong}) => {\r\n\r\n    useEffect(() => {\r\n        if (isPlaying) {\r\n            const playPromise = audioRef.current.play()\r\n            if (playPromise !== undefined) {\r\n                playPromise.then(audio => {\r\n                    audioRef.current.play()\r\n                })\r\n            }\r\n        }\r\n    }, [currentSong])\r\n\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause()\r\n            setIsPlaying(!isPlaying)\r\n        } else {\r\n            audioRef.current.play()\r\n            setIsPlaying(!isPlaying)\r\n        }\r\n    }\r\n\r\n    const formatTime = (time) => Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value\r\n        setSongInfo({...songInfo, currentTime: e.target.value})\r\n    }\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n        const currentIndex = songs.findIndex(s => s.id === currentSong.id)\r\n        let newIndex = currentIndex + direction\r\n\r\n        if (newIndex >= songs.length) newIndex = 0\r\n        else if (newIndex < 0) newIndex = songs.length - 1\r\n\r\n        await setCurrentSong(songs[newIndex])\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{formatTime(songInfo.currentTime)}</p>\r\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\r\n                    <input\r\n                        min={0}\r\n                        max={songInfo.duration || 0}\r\n                        value={songInfo.currentTime}\r\n                        onChange={dragHandler}\r\n                        type=\"range\"/>\r\n                    <div className=\"animate-track\" style={{transform: `translateX(${(songInfo.currentTime/songInfo.duration)*100}%)`}}>\r\n\r\n                    </div>\r\n                </div>\r\n                <p>{formatTime(songInfo.duration || 0)}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler(-1)} className=\"skip-back\" size=\"2x\"\r\n                                 icon={faAngleLeft}/>\r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler}\r\n                    className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay}/>\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler(1)} className=\"skip-forward\" size=\"2x\"\r\n                                 icon={faAngleRight}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ({currentSong}) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img src={currentSong.cover} alt={currentSong.name}/>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;\n","import React from 'react';\r\n\r\nconst LibrarySong = ({song, songs, setCurrentSong, audioRef, isPlaying, setSongs, currentSong}) => {\r\n    const songSelectHandler = async () => {\r\n        await setCurrentSong(song)\r\n        const newSongs = songs.map(s => {\r\n            if(s.id === song.id) {\r\n                return {\r\n                    ...s,\r\n                    active: true,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...s,\r\n                    active: false\r\n                }\r\n            }\r\n        })\r\n        setSongs(newSongs)\r\n        if (isPlaying) {\r\n            const playPromise = audioRef.current.play()\r\n            if (playPromise !== undefined) {\r\n                playPromise.then( audio => {\r\n                    audioRef.current.play()\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div onClick={songSelectHandler} className={`library-song ${song.id === currentSong.id ? 'selected' : ''}`}>\r\n            <img src={song.cover} alt={song.name}/>\r\n            <div className=\"song-info\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import React from 'react'\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\n\r\nconst Library = ({songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus, currentSong}) => {\r\n    return <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n        <h2>Library</h2>\r\n        <div className=\"library-songs\">\r\n            {\r\n                songs.map(song => <LibrarySong\r\n                    songs={songs}\r\n                    setCurrentSong={setCurrentSong}\r\n                    song={song}\r\n                    key={song.id}\r\n                    audioRef={audioRef}\r\n                    isPlaying={isPlaying}\r\n                    setSongs={setSongs}\r\n                    currentSong={currentSong}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Library","import React from 'react'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({setLibraryStatus, libraryStatus}) => {\r\n    return <nav>\r\n        <h1>Waves</h1>\r\n        <button onClick={ () => setLibraryStatus(!libraryStatus) }>\r\n            Library\r\n            <FontAwesomeIcon icon={faMusic}/>\r\n        </button>\r\n    </nav>\r\n}\r\n\r\nexport default Nav","import React, {useRef, useState} from 'react';\n\nimport \"./styles/app.scss\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport data from \"./data\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\n\nfunction App() {\n\n    const [songs, setSongs] = useState(data)\n    const [currentSong, setCurrentSong] = useState(songs[0])\n    const [isPlaying, setIsPlaying] = useState(false)\n    const audioRef = useRef(null)\n    const [songInfo, setSongInfo] = useState({currentTime: 0, duration: 0})\n    const [libraryStatus, setLibraryStatus] = useState(false)\n\n    const timeUpdateHandler = (e) => {\n        const current = e.target.currentTime\n        const duration = e.target.duration\n        setSongInfo({...songInfo, currentTime: current, duration})\n    }\n\n    const songEndHandler = async () => {\n        const currentIndex = songs.findIndex(s => s.id === currentSong.id)\n        await setCurrentSong(songs[(currentIndex+1) % songs.length])\n    }\n\n    return (\n        <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n            <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n            <Song currentSong={currentSong}/>\n            <Player\n                audioRef={audioRef}\n                setIsPlaying={setIsPlaying}\n                isPlaying={isPlaying}\n                currentSong={currentSong}\n                songInfo={songInfo}\n                setSongInfo={setSongInfo}\n                songs={songs}\n                setCurrentSong={setCurrentSong}\n                setSongs={setSongs}\n            />\n            <Library\n                libraryStatus={libraryStatus}\n                songs={songs}\n                setCurrentSong={setCurrentSong}\n                audioRef={audioRef}\n                isPlaying={isPlaying}\n                setSongs={setSongs}\n                currentSong={currentSong}\n            />\n            <audio\n                onLoadedMetadata={timeUpdateHandler}\n                onTimeUpdate={timeUpdateHandler}\n                ref={audioRef}\n                src={currentSong.audio}\n                onEnded={songEndHandler}>\n                &nbsp;\n            </audio>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}